import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import "./styles.css";
import axios from "axios";
import config from "../../services/config";
import DefaultProfilePic from "../../assets/images/profilepic.png";
import DefaultCoverPic from "../../assets/images/coverpic.png";
import PostCard from "../../components/PostCard";
import Loading from "../../components/Loading";
const ProfilePage = ({ userProfile }) => {
  const [activeButton, setActiveButton] = useState("Overview");
  const [userPosts, setUserPosts] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [isactiveTournament, setActiveTournament] =
    useState("activeTournament");
  const [pastTournaments, setPastTournaments] = useState([]);
  const [activeTournaments, setActiveTournaments] = useState([]);
  const [userStats, setUserStats] = useState(null);
  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  };
  const fetchUserStats = async (username) => {
    try {
      const response = await axios.get(
        `${config.base_url}/api/guest/getusersstats?username=${username}`
      );

      setUserStats(response.data.data[0]);
      const teams = response.data.data[0].teams;
      const active = [];
      const past = [];

      teams.forEach((team) => {
        if (team.tournament && team.tournament.is_completed === 1) {
          past.push(team.tournament);
        } else if (team.tournament) {
          active.push(team.tournament);
        }
      });

      setPastTournaments(past);
      setActiveTournaments(active);
    } catch (error) {
      console.error("Error fetching user statistics:", error);
    }
  };
  const handleactiveTournament = async (tournamentactive) => {
    setActiveTournament(tournamentactive);
  };
  useEffect(() => {
    if (userProfile) {
      fetchUserStats(userProfile.username);
    }
  }, [userProfile]);

  const handleButtonClick = (buttonName) => {
    setActiveButton(buttonName);

    if (buttonName === "Activity" && userPosts.length === 0) {
      fetchUserPosts();
    }
  };
  useEffect(() => {
    scrollToTop();
    const token = localStorage.getItem("token");
    if (!token) {
      window.location.href = "/Login";
    }
  }, []);
  const fetchUserPosts = async () => {
    try {
      setIsLoading(true);
      const response = await axios.get(
        `${config.base_url}/api/guest/getuserposts`,
        {
          params: {
            username: userProfile.username,
          },
        }
      );

      if (response.status === 200) {
        setUserPosts(response.data.data);
      } else {
        console.error("Error fetching user posts:", response.data.message);
      }
    } catch (error) {
      console.error("Error fetching user posts:", error);
    } finally {
      setIsLoading(false);
    }
  };
  return (
    <div className="ProfilePage">
      <div className="Profile-navbar">
        <div className="coverPhotoContainer">
          <img
            src={
              userProfile
                ? config.base_url + userProfile.coverimage || DefaultCoverPic
                : DefaultCoverPic
            }
            alt="ProfileCover"
            className="coverPhoto"
          />

          <img
            src={
              userProfile
                ? config.base_url + userProfile.profileimage ||
                  DefaultProfilePic
                : DefaultProfilePic
            }
            alt="ProfileImage"
            className="profileImage"
          />
          <div className="profileimagestats">
            <div className="user-info">
              <div className="profileimagestatsusername-info">
                <span className="username-profile">
                  {userProfile ? userProfile.username : ""}
                </span>
              </div>
              <div className="profileimagestats-info-wrapper">
                <div className="profileimagestats-info">
                  <span className="label-profilepage">Followers</span>
                  <span className="greycolor-profilepage">
                    {userProfile ? userProfile.followers_count : "0"}
                  </span>
                </div>

                <div className="profileimagestats-info">
                  <span className="label-profilepage"> Tournaments Played</span>
                  <span className="greycolor-profilepage">
                    {userStats ? userStats.tournaments_count : "0"}
                  </span>
                </div>
              </div>
              <div className="profileimagestats-info-wrapper">
                <div className="profileimagestats-info">
                  <span className="label-profilepage">Matches Played</span>
                  <span className="greycolor-profilepage">
                    {userProfile ? userProfile.followers_count : "0"}
                  </span>
                </div>
                <div className="profileimagestats-info">
                  <span className="label-profilepage">Win Rate</span>
                  <span className="greycolor-profilepage">
                    {userStats && userStats.leaderboard
                      ? userStats.tournaments_count === 0
                        ? "0%"
                        : `${
                            (parseInt(userStats.leaderboard.won) /
                              parseInt(userStats.tournaments_count)) *
                            100
                          }%`
                      : "0%"}
                  </span>
                </div>
              </div>
            </div>
          </div>
          <div className="coverimageuserstats">
            <div className="overview-stats-wins">
              <span>
                {" "}
                {userStats && userStats.leaderboard
                  ? userStats.leaderboard.won
                  : "0"}{" "}
              </span>
              <span className="green win">WON</span>
            </div>
            <div className="overview-stats-wins">
              <span>
                {" "}
                {userStats && userStats.leaderboard
                  ? userStats.leaderboard.lost
                  : "0"}{" "}
              </span>
              <span className="red loss">LOST</span>
            </div>
            <div className="overview-stats-points">
              <span className="points-span">
                {userStats && userStats.leaderboard
                  ? userStats.leaderboard.points
                  : "0"}
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="30"
                  height="30"
                  viewBox="0 0 36 36"
                  fill="none"
                >
                  <path
                    d="M17.9473 32.9995C26.2025 33.0632 32.9416 26.425 32.9996 18.1727C33.0576 9.92036 26.4126 3.17893 18.1575 3.11527C9.90232 3.05162 3.16318 9.68983 3.10515 17.9421C3.04713 26.1945 9.69219 32.9359 17.9473 32.9995Z"
                    fill="#EFB832"
                  />
                  <path
                    d="M21.6137 23.1942C21.1819 23.6431 20.6648 24.0013 20.0927 24.2477C19.5206 24.4942 18.9049 24.6241 18.2818 24.6296C15.3422 24.607 12.9881 21.6168 13.0139 17.9477C13.0397 14.2786 15.4356 11.3251 18.3752 11.3477C19.0454 11.3684 19.704 11.5293 20.3084 11.8199C20.9128 12.1106 21.4497 12.5245 21.8844 13.0351"
                    fill="#EFB832"
                  />
                  <path
                    d="M9.73073 5.45461C12.2003 3.8317 15.0964 2.97765 18.0527 3.00044C22.0169 3.03102 25.8077 4.63459 28.5912 7.4584C31.3746 10.2822 32.9227 14.0949 32.8948 18.0578C32.8741 21.0131 31.9771 23.8953 30.3174 26.3398C28.6577 28.7844 26.3098 30.6815 23.5706 31.7914C20.8314 32.9013 17.8239 33.174 14.9285 32.5751C12.0331 31.9762 9.37974 30.5326 7.30403 28.4268C5.22831 26.3209 3.82345 23.6475 3.26709 20.7446C2.71072 17.8417 3.02786 14.8396 4.17837 12.118C5.32889 9.39639 7.26113 7.07752 9.73073 5.45461Z"
                    fill="#EFB832"
                  />
                  <path
                    d="M32.9996 18.1727L35.4996 18.1903L32.9996 18.1727ZM3.10515 17.9421L5.60509 17.9597L3.10515 17.9421ZM23.4154 24.9274C24.3726 23.9323 24.3419 22.3497 23.3468 21.3925C22.3517 20.4353 20.7691 20.466 19.8119 21.4611L23.4154 24.9274ZM18.2818 24.6296L18.2625 27.1296C18.2764 27.1297 18.2903 27.1297 18.3042 27.1295L18.2818 24.6296ZM18.3752 11.3477L18.4524 8.84893C18.4331 8.84833 18.4138 8.84796 18.3945 8.84781L18.3752 11.3477ZM19.9809 14.6558C20.876 15.7071 22.4539 15.8337 23.5051 14.9386C24.5564 14.0435 24.683 12.4657 23.7879 11.4144L19.9809 14.6558ZM18.0527 3.00044L18.0334 5.50037L18.0527 3.00044ZM9.73073 5.45461L8.35777 3.36536V3.36536L9.73073 5.45461ZM4.17837 12.118L1.87568 11.1445L4.17837 12.118ZM3.26709 20.7446L5.7224 20.274L3.26709 20.7446ZM14.9285 32.5751L14.4221 35.0233H14.4221L14.9285 32.5751ZM30.3174 26.3398L28.2491 24.9356L28.2491 24.9356L30.3174 26.3398ZM32.8948 18.0578L35.3948 18.0754L32.8948 18.0578ZM28.5912 7.4584L30.3716 5.7034V5.7034L28.5912 7.4584ZM30.4997 18.1551C30.4514 25.0253 24.8412 30.5526 17.9666 30.4996L17.928 35.4995C27.5637 35.5738 35.4318 27.8247 35.4996 18.1903L30.4997 18.1551ZM17.9666 30.4996C11.0907 30.4466 5.55677 24.8312 5.60509 17.9597L0.605215 17.9246C0.537479 27.5577 8.29372 35.4252 17.928 35.4995L17.9666 30.4996ZM5.60509 17.9597C5.6534 11.0896 11.2636 5.56219 18.1382 5.6152L18.1767 0.615349C8.54108 0.541044 0.67296 8.29009 0.605215 17.9246L5.60509 17.9597ZM18.1382 5.6152C25.0141 5.66822 30.548 11.2836 30.4997 18.1551L35.4996 18.1903C35.5673 8.55711 27.8111 0.689644 18.1767 0.615349L18.1382 5.6152ZM19.8119 21.4611C19.6109 21.6701 19.3701 21.8369 19.1036 21.9517L21.0818 26.5437C21.9595 26.1656 22.7529 25.6161 23.4154 24.9274L19.8119 21.4611ZM19.1036 21.9517C18.837 22.0666 18.55 22.1271 18.2594 22.1297L18.3042 27.1295C19.2598 27.121 20.2041 26.9219 21.0818 26.5437L19.1036 21.9517ZM18.3011 22.1297C17.2329 22.1215 15.4939 20.8035 15.5139 17.9653L10.514 17.9301C10.4824 22.4302 13.4515 27.0925 18.2625 27.1296L18.3011 22.1297ZM15.5139 17.9653C15.5338 15.1273 17.29 13.8394 18.3559 13.8477L18.3945 8.84781C13.5811 8.81069 10.5456 13.4298 10.514 17.9301L15.5139 17.9653ZM18.298 13.8465C18.6193 13.8565 18.9351 13.9336 19.225 14.073L21.3917 9.56686C20.4728 9.12501 19.4716 8.88042 18.4524 8.84893L18.298 13.8465ZM19.225 14.073C19.5149 14.2124 19.7724 14.411 19.9809 14.6558L23.7879 11.4144C23.1269 10.6381 22.3107 10.0087 21.3917 9.56686L19.225 14.073ZM18.072 0.500519C14.6214 0.47391 11.2408 1.47076 8.35777 3.36536L11.1037 7.54387C13.1599 6.19265 15.5714 5.48138 18.0334 5.50037L18.072 0.500519ZM8.35777 3.36536C5.47471 5.25997 3.21888 7.96715 1.87568 11.1445L6.48107 13.0914C7.4389 10.8256 9.04754 8.89507 11.1037 7.54387L8.35777 3.36536ZM1.87568 11.1445C0.532473 14.3219 0.162333 17.8266 0.811773 21.2152L5.7224 20.274C5.25912 17.8567 5.52324 15.3572 6.48107 13.0914L1.87568 11.1445ZM0.811773 21.2152C1.46121 24.6037 3.10102 27.7241 5.52358 30.1818L9.08447 26.6718C7.3556 24.9178 6.18569 22.6913 5.7224 20.274L0.811773 21.2152ZM5.52358 30.1818C7.94613 32.6394 11.0428 34.3243 14.4221 35.0233L15.4349 30.1269C13.0234 29.6281 10.8134 28.4257 9.08447 26.6718L5.52358 30.1818ZM14.4221 35.0233C17.8014 35.7223 21.3118 35.404 24.5094 34.1085L22.6318 29.4744C20.351 30.3985 17.8464 30.6258 15.4349 30.1269L14.4221 35.0233ZM24.5094 34.1085C27.707 32.8128 30.4481 30.5981 32.3857 27.7441L28.2491 24.9356C26.8673 26.9707 24.9126 28.5503 22.6318 29.4744L24.5094 34.1085ZM32.3857 27.7441C34.3234 24.8901 35.3705 21.5253 35.3948 18.0754L30.3949 18.0403C30.3776 20.5009 29.6308 22.9004 28.2491 24.9356L32.3857 27.7441ZM35.3948 18.0754C35.4273 13.4493 33.6202 8.99904 30.3716 5.7034L26.8107 9.2134C29.1291 11.5654 30.4181 14.7406 30.3949 18.0403L35.3948 18.0754ZM30.3716 5.7034C27.1231 2.4078 22.6989 0.5362 18.072 0.500519L18.0334 5.50037C21.3349 5.52583 24.4924 6.86138 26.8107 9.2134L30.3716 5.7034Z"
                    fill="#CC9322"
                  />
                </svg>
              </span>
            </div>
          </div>
        </div>

        <div className="profile-navbar-buttons-container">
          <div
            className="profile-navbar-buttons "
            style={{ marginRight: "80px" }}
          >
            <button
              className={activeButton === "Overview" ? "profilepageactive" : ""}
              onClick={() => handleButtonClick("Overview")}
            >
              Overview
            </button>
            <button
              className={activeButton === "Activity" ? "profilepageactive" : ""}
              onClick={() => handleButtonClick("Activity")}
            >
              Activity
            </button>
          </div>

          <div className="profile-navbar-buttons">
            <Link to="/Settings">
              <button className="hoversettings">
                {" "}
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="20"
                  viewBox="0 0 20 20"
                  fill="none"
                >
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M8.08776 1.66045C8.42286 1.0888 8.93706 0.516602 9.59969 0.516602C10.2626 0.516602 10.7769 1.0892 11.112 1.66114C11.1408 1.71039 11.1716 1.75872 11.2043 1.80603C11.468 2.18798 11.8429 2.48618 12.282 2.6631L12.918 2.91767C13.3583 3.09187 13.8421 3.13658 14.3087 3.04619C14.3974 3.02901 14.4846 3.00711 14.5702 2.98066C15.1756 2.79343 15.9014 2.75815 16.3576 3.19805C16.8378 3.66115 16.7955 4.43816 16.6142 5.08022C16.6 5.13068 16.5875 5.18171 16.5767 5.23321C16.483 5.68311 16.5294 6.1497 16.71 6.57424L16.974 7.18753C17.1575 7.6109 17.4667 7.97249 17.8628 8.22678C17.9344 8.27274 18.0082 8.31482 18.084 8.35293C18.6549 8.64007 19.2 9.13471 19.2 9.77374C19.2 10.4128 18.6549 10.9074 18.084 11.1946C18.0082 11.2327 17.9344 11.2748 17.8628 11.3207C17.4667 11.575 17.1575 11.9366 16.974 12.36L16.71 12.9732C16.5295 13.3979 16.4833 13.8646 16.5773 14.3145C16.588 14.3656 16.6004 14.4163 16.6145 14.4664C16.796 15.1089 16.8383 15.8867 16.3575 16.35C15.9013 16.7897 15.1758 16.7543 14.5704 16.5671C14.485 16.5407 14.3978 16.5188 14.3093 16.5017C13.8429 16.4113 13.3593 16.4559 12.9192 16.6298L12.282 16.8844C11.8429 17.0613 11.468 17.3595 11.2043 17.7415C11.1716 17.7888 11.1408 17.8371 11.112 17.8863C10.7769 18.4583 10.2626 19.0309 9.59969 19.0309C8.93706 19.0309 8.42286 18.4587 8.08776 17.887C8.05889 17.8378 8.02809 17.7894 7.9954 17.7421C7.73171 17.3604 7.35687 17.0624 6.918 16.8855L6.282 16.631C5.84187 16.4565 5.35804 16.4115 4.89144 16.5017C4.80284 16.5188 4.7156 16.5407 4.63011 16.5671C4.02449 16.7541 3.29861 16.7893 2.84235 16.3494C2.36209 15.8862 2.40427 15.1093 2.58521 14.4671C2.59937 14.4168 2.61181 14.366 2.62248 14.3147C2.71601 13.865 2.66949 13.3987 2.4888 12.9744L2.2248 12.36C2.0414 11.9368 1.73235 11.5753 1.33649 11.321C1.26504 11.2751 1.19133 11.2331 1.11572 11.195C0.544955 10.9076 0 10.4129 0 9.77391C0 9.13474 0.5451 8.63977 1.11616 8.35269C1.60647 8.10621 2.00536 7.69976 2.2248 7.18753L2.4888 6.57424C2.66975 6.14984 2.7164 5.68328 2.62287 5.23335C2.61218 5.18192 2.59971 5.13098 2.58551 5.08059C2.40449 4.4383 2.36222 3.66112 2.84258 3.19791C3.29876 2.75803 4.02444 2.79315 4.62994 2.98013C4.7155 3.00655 4.80281 3.02843 4.89149 3.04557C5.35805 3.13575 5.84185 3.09085 6.282 2.91652L6.918 2.66194C7.35687 2.4851 7.73171 2.18708 7.9954 1.80536C8.02809 1.75804 8.05889 1.7097 8.08776 1.66045ZM4.44699 7.80108C3.9062 9.0606 3.9062 10.4869 4.44699 11.7464L4.53971 11.9624C5.06289 13.1809 6.04867 14.1416 7.28021 14.6333L7.74583 14.8192C8.93625 15.2945 10.2637 15.2944 11.4541 14.819L11.9196 14.6331C13.1505 14.1415 14.1359 13.1813 14.6592 11.9635L14.7519 11.7475C15.2934 10.4874 15.2934 9.06011 14.7519 7.79994L14.6592 7.58399C14.1359 6.36618 13.1505 5.40595 11.9196 4.91437L11.4541 4.72847C10.2637 4.25309 8.93625 4.25303 7.74583 4.72829L7.28021 4.91419C6.04867 5.40587 5.06289 6.36663 4.53971 7.58512L4.44699 7.80108Z"
                    fill="white"
                  />
                </svg>
              </button>
            </Link>
          </div>
        </div>
      </div>
      <div className={activeButton === "Activity" ? "profile-pages-info" : ""}>
        {activeButton === "Overview" && (
          <div className="overview-container">
            <div className="overview-content-container">
              <div className="overview-content-wrapper">
                <div className="overview-content-gap">
                  <div className="overview-stats">
                    <span className="points-span">
                      {userStats && userStats.leaderboard
                        ? userStats.leaderboard.points
                        : "0"}
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="25"
                        height="25"
                        viewBox="0 0 36 36"
                        fill="none"
                      >
                        <path
                          d="M17.9473 32.9995C26.2025 33.0632 32.9416 26.425 32.9996 18.1727C33.0576 9.92036 26.4126 3.17893 18.1575 3.11527C9.90232 3.05162 3.16318 9.68983 3.10515 17.9421C3.04713 26.1945 9.69219 32.9359 17.9473 32.9995Z"
                          fill="#EFB832"
                        />
                        <path
                          d="M21.6137 23.1942C21.1819 23.6431 20.6648 24.0013 20.0927 24.2477C19.5206 24.4942 18.9049 24.6241 18.2818 24.6296C15.3422 24.607 12.9881 21.6168 13.0139 17.9477C13.0397 14.2786 15.4356 11.3251 18.3752 11.3477C19.0454 11.3684 19.704 11.5293 20.3084 11.8199C20.9128 12.1106 21.4497 12.5245 21.8844 13.0351"
                          fill="#EFB832"
                        />
                        <path
                          d="M9.73073 5.45461C12.2003 3.8317 15.0964 2.97765 18.0527 3.00044C22.0169 3.03102 25.8077 4.63459 28.5912 7.4584C31.3746 10.2822 32.9227 14.0949 32.8948 18.0578C32.8741 21.0131 31.9771 23.8953 30.3174 26.3398C28.6577 28.7844 26.3098 30.6815 23.5706 31.7914C20.8314 32.9013 17.8239 33.174 14.9285 32.5751C12.0331 31.9762 9.37974 30.5326 7.30403 28.4268C5.22831 26.3209 3.82345 23.6475 3.26709 20.7446C2.71072 17.8417 3.02786 14.8396 4.17837 12.118C5.32889 9.39639 7.26113 7.07752 9.73073 5.45461Z"
                          fill="#EFB832"
                        />
                        <path
                          d="M32.9996 18.1727L35.4996 18.1903L32.9996 18.1727ZM3.10515 17.9421L5.60509 17.9597L3.10515 17.9421ZM23.4154 24.9274C24.3726 23.9323 24.3419 22.3497 23.3468 21.3925C22.3517 20.4353 20.7691 20.466 19.8119 21.4611L23.4154 24.9274ZM18.2818 24.6296L18.2625 27.1296C18.2764 27.1297 18.2903 27.1297 18.3042 27.1295L18.2818 24.6296ZM18.3752 11.3477L18.4524 8.84893C18.4331 8.84833 18.4138 8.84796 18.3945 8.84781L18.3752 11.3477ZM19.9809 14.6558C20.876 15.7071 22.4539 15.8337 23.5051 14.9386C24.5564 14.0435 24.683 12.4657 23.7879 11.4144L19.9809 14.6558ZM18.0527 3.00044L18.0334 5.50037L18.0527 3.00044ZM9.73073 5.45461L8.35777 3.36536V3.36536L9.73073 5.45461ZM4.17837 12.118L1.87568 11.1445L4.17837 12.118ZM3.26709 20.7446L5.7224 20.274L3.26709 20.7446ZM14.9285 32.5751L14.4221 35.0233H14.4221L14.9285 32.5751ZM30.3174 26.3398L28.2491 24.9356L28.2491 24.9356L30.3174 26.3398ZM32.8948 18.0578L35.3948 18.0754L32.8948 18.0578ZM28.5912 7.4584L30.3716 5.7034V5.7034L28.5912 7.4584ZM30.4997 18.1551C30.4514 25.0253 24.8412 30.5526 17.9666 30.4996L17.928 35.4995C27.5637 35.5738 35.4318 27.8247 35.4996 18.1903L30.4997 18.1551ZM17.9666 30.4996C11.0907 30.4466 5.55677 24.8312 5.60509 17.9597L0.605215 17.9246C0.537479 27.5577 8.29372 35.4252 17.928 35.4995L17.9666 30.4996ZM5.60509 17.9597C5.6534 11.0896 11.2636 5.56219 18.1382 5.6152L18.1767 0.615349C8.54108 0.541044 0.67296 8.29009 0.605215 17.9246L5.60509 17.9597ZM18.1382 5.6152C25.0141 5.66822 30.548 11.2836 30.4997 18.1551L35.4996 18.1903C35.5673 8.55711 27.8111 0.689644 18.1767 0.615349L18.1382 5.6152ZM19.8119 21.4611C19.6109 21.6701 19.3701 21.8369 19.1036 21.9517L21.0818 26.5437C21.9595 26.1656 22.7529 25.6161 23.4154 24.9274L19.8119 21.4611ZM19.1036 21.9517C18.837 22.0666 18.55 22.1271 18.2594 22.1297L18.3042 27.1295C19.2598 27.121 20.2041 26.9219 21.0818 26.5437L19.1036 21.9517ZM18.3011 22.1297C17.2329 22.1215 15.4939 20.8035 15.5139 17.9653L10.514 17.9301C10.4824 22.4302 13.4515 27.0925 18.2625 27.1296L18.3011 22.1297ZM15.5139 17.9653C15.5338 15.1273 17.29 13.8394 18.3559 13.8477L18.3945 8.84781C13.5811 8.81069 10.5456 13.4298 10.514 17.9301L15.5139 17.9653ZM18.298 13.8465C18.6193 13.8565 18.9351 13.9336 19.225 14.073L21.3917 9.56686C20.4728 9.12501 19.4716 8.88042 18.4524 8.84893L18.298 13.8465ZM19.225 14.073C19.5149 14.2124 19.7724 14.411 19.9809 14.6558L23.7879 11.4144C23.1269 10.6381 22.3107 10.0087 21.3917 9.56686L19.225 14.073ZM18.072 0.500519C14.6214 0.47391 11.2408 1.47076 8.35777 3.36536L11.1037 7.54387C13.1599 6.19265 15.5714 5.48138 18.0334 5.50037L18.072 0.500519ZM8.35777 3.36536C5.47471 5.25997 3.21888 7.96715 1.87568 11.1445L6.48107 13.0914C7.4389 10.8256 9.04754 8.89507 11.1037 7.54387L8.35777 3.36536ZM1.87568 11.1445C0.532473 14.3219 0.162333 17.8266 0.811773 21.2152L5.7224 20.274C5.25912 17.8567 5.52324 15.3572 6.48107 13.0914L1.87568 11.1445ZM0.811773 21.2152C1.46121 24.6037 3.10102 27.7241 5.52358 30.1818L9.08447 26.6718C7.3556 24.9178 6.18569 22.6913 5.7224 20.274L0.811773 21.2152ZM5.52358 30.1818C7.94613 32.6394 11.0428 34.3243 14.4221 35.0233L15.4349 30.1269C13.0234 29.6281 10.8134 28.4257 9.08447 26.6718L5.52358 30.1818ZM14.4221 35.0233C17.8014 35.7223 21.3118 35.404 24.5094 34.1085L22.6318 29.4744C20.351 30.3985 17.8464 30.6258 15.4349 30.1269L14.4221 35.0233ZM24.5094 34.1085C27.707 32.8128 30.4481 30.5981 32.3857 27.7441L28.2491 24.9356C26.8673 26.9707 24.9126 28.5503 22.6318 29.4744L24.5094 34.1085ZM32.3857 27.7441C34.3234 24.8901 35.3705 21.5253 35.3948 18.0754L30.3949 18.0403C30.3776 20.5009 29.6308 22.9004 28.2491 24.9356L32.3857 27.7441ZM35.3948 18.0754C35.4273 13.4493 33.6202 8.99904 30.3716 5.7034L26.8107 9.2134C29.1291 11.5654 30.4181 14.7406 30.3949 18.0403L35.3948 18.0754ZM30.3716 5.7034C27.1231 2.4078 22.6989 0.5362 18.072 0.500519L18.0334 5.50037C21.3349 5.52583 24.4924 6.86138 26.8107 9.2134L30.3716 5.7034Z"
                          fill="#CC9322"
                        />
                      </svg>
                    </span>
                    <span className="green"> Total Points</span>
                  </div>
                </div>
              </div>
              <div className="overview-content-wrapper">
                <div className="overview-content-gap">
                  <div className="overview-stats">
                    {userStats ? userStats.tournaments_count : "0"}
                    <span className="green"> Tournaments Played</span>
                  </div>
                </div>
              </div>
              <div className="overview-content-wrapper">
                <div className="overview-content-gap">
                  <div className="overview-stats">
                    {userStats ? userStats.matches_count : "0"}{" "}
                    <span className="green">Matches Played</span>
                  </div>
                </div>
              </div>
              <div className="overview-content-wrapper">
                <div className="overview-content-gap">
                  <div className="overview-stats-winrate">
                    <span>
                      {" "}
                      {userStats && userStats.leaderboard
                        ? userStats.tournaments_count === 0
                          ? "0%"
                          : `${
                              (parseInt(userStats.leaderboard.won) /
                                parseInt(userStats.tournaments_count)) *
                              100
                            }%`
                        : "0%"}
                    </span>
                    <span className="green winrate">Win/Rate</span>
                  </div>
                  <div className="overview-stats-winrate">
                    <span>
                      {" "}
                      {userStats && userStats.leaderboard
                        ? userStats.leaderboard.won
                        : "0"}{" "}
                    </span>
                    <span className="green win">Wins</span>
                  </div>
                  <div className="overview-stats-winrate">
                    <span>
                      {" "}
                      {userStats && userStats.leaderboard
                        ? userStats.leaderboard.lost
                        : "0"}{" "}
                    </span>
                    <span className="red loss">Losses</span>
                  </div>
                </div>
              </div>
            </div>

            <div className="tournament-content-container">
              <div className="tournament-content-wrapper">
                {" "}
                <div className="pages-overview">
                  <button
                    className={
                      isactiveTournament === "activeTournament"
                        ? "tournamentactive"
                        : ""
                    }
                    onClick={() => handleactiveTournament("activeTournament")}
                  >
                    Active Tournaments
                  </button>
                  <button
                    className={
                      isactiveTournament === "pastTournament"
                        ? "tournamentactive"
                        : ""
                    }
                    onClick={() => handleactiveTournament("pastTournament")}
                  >
                    Past Tournaments
                  </button>
                </div>
                <div className="tournaments-results-wrapper">
                  {isactiveTournament === "activeTournament" ? (
                    activeTournaments.length === 0 ? (
                      <div className="notournaments">No Tournaments</div>
                    ) : (
                      activeTournaments.map((tournament) => (
                        <a
                          href={`/Tournaments/${tournament.id}`}
                          key={tournament.id}
                        >
                          <div
                            key={tournament.id}
                            className="tournament-profilecard"
                          >
                            <span className="tournament-profilecard-name">
                              {" "}
                              {tournament.name}
                            </span>{" "}
                            <span className="tournament-profilecard-startdate">
                              {" "}
                              Start Date: &nbsp;{tournament.start_date}
                            </span>
                            <span className="tournament-profilecard-enddate">
                              {" "}
                              End Date: &nbsp; {tournament.end_date}
                            </span>
                            <span className="tournament-profilecard-points">
                              Points: &nbsp;
                              {tournament.tournament_points}
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="18"
                                height="18"
                                viewBox="0 0 36 36"
                                fill="none"
                              >
                                <path
                                  d="M17.9473 32.9995C26.2025 33.0632 32.9416 26.425 32.9996 18.1727C33.0576 9.92036 26.4126 3.17893 18.1575 3.11527C9.90232 3.05162 3.16318 9.68983 3.10515 17.9421C3.04713 26.1945 9.69219 32.9359 17.9473 32.9995Z"
                                  fill="#EFB832"
                                />
                                <path
                                  d="M21.6137 23.1942C21.1819 23.6431 20.6648 24.0013 20.0927 24.2477C19.5206 24.4942 18.9049 24.6241 18.2818 24.6296C15.3422 24.607 12.9881 21.6168 13.0139 17.9477C13.0397 14.2786 15.4356 11.3251 18.3752 11.3477C19.0454 11.3684 19.704 11.5293 20.3084 11.8199C20.9128 12.1106 21.4497 12.5245 21.8844 13.0351"
                                  fill="#EFB832"
                                />
                                <path
                                  d="M9.73073 5.45461C12.2003 3.8317 15.0964 2.97765 18.0527 3.00044C22.0169 3.03102 25.8077 4.63459 28.5912 7.4584C31.3746 10.2822 32.9227 14.0949 32.8948 18.0578C32.8741 21.0131 31.9771 23.8953 30.3174 26.3398C28.6577 28.7844 26.3098 30.6815 23.5706 31.7914C20.8314 32.9013 17.8239 33.174 14.9285 32.5751C12.0331 31.9762 9.37974 30.5326 7.30403 28.4268C5.22831 26.3209 3.82345 23.6475 3.26709 20.7446C2.71072 17.8417 3.02786 14.8396 4.17837 12.118C5.32889 9.39639 7.26113 7.07752 9.73073 5.45461Z"
                                  fill="#EFB832"
                                />
                                <path
                                  d="M32.9996 18.1727L35.4996 18.1903L32.9996 18.1727ZM3.10515 17.9421L5.60509 17.9597L3.10515 17.9421ZM23.4154 24.9274C24.3726 23.9323 24.3419 22.3497 23.3468 21.3925C22.3517 20.4353 20.7691 20.466 19.8119 21.4611L23.4154 24.9274ZM18.2818 24.6296L18.2625 27.1296C18.2764 27.1297 18.2903 27.1297 18.3042 27.1295L18.2818 24.6296ZM18.3752 11.3477L18.4524 8.84893C18.4331 8.84833 18.4138 8.84796 18.3945 8.84781L18.3752 11.3477ZM19.9809 14.6558C20.876 15.7071 22.4539 15.8337 23.5051 14.9386C24.5564 14.0435 24.683 12.4657 23.7879 11.4144L19.9809 14.6558ZM18.0527 3.00044L18.0334 5.50037L18.0527 3.00044ZM9.73073 5.45461L8.35777 3.36536V3.36536L9.73073 5.45461ZM4.17837 12.118L1.87568 11.1445L4.17837 12.118ZM3.26709 20.7446L5.7224 20.274L3.26709 20.7446ZM14.9285 32.5751L14.4221 35.0233H14.4221L14.9285 32.5751ZM30.3174 26.3398L28.2491 24.9356L28.2491 24.9356L30.3174 26.3398ZM32.8948 18.0578L35.3948 18.0754L32.8948 18.0578ZM28.5912 7.4584L30.3716 5.7034V5.7034L28.5912 7.4584ZM30.4997 18.1551C30.4514 25.0253 24.8412 30.5526 17.9666 30.4996L17.928 35.4995C27.5637 35.5738 35.4318 27.8247 35.4996 18.1903L30.4997 18.1551ZM17.9666 30.4996C11.0907 30.4466 5.55677 24.8312 5.60509 17.9597L0.605215 17.9246C0.537479 27.5577 8.29372 35.4252 17.928 35.4995L17.9666 30.4996ZM5.60509 17.9597C5.6534 11.0896 11.2636 5.56219 18.1382 5.6152L18.1767 0.615349C8.54108 0.541044 0.67296 8.29009 0.605215 17.9246L5.60509 17.9597ZM18.1382 5.6152C25.0141 5.66822 30.548 11.2836 30.4997 18.1551L35.4996 18.1903C35.5673 8.55711 27.8111 0.689644 18.1767 0.615349L18.1382 5.6152ZM19.8119 21.4611C19.6109 21.6701 19.3701 21.8369 19.1036 21.9517L21.0818 26.5437C21.9595 26.1656 22.7529 25.6161 23.4154 24.9274L19.8119 21.4611ZM19.1036 21.9517C18.837 22.0666 18.55 22.1271 18.2594 22.1297L18.3042 27.1295C19.2598 27.121 20.2041 26.9219 21.0818 26.5437L19.1036 21.9517ZM18.3011 22.1297C17.2329 22.1215 15.4939 20.8035 15.5139 17.9653L10.514 17.9301C10.4824 22.4302 13.4515 27.0925 18.2625 27.1296L18.3011 22.1297ZM15.5139 17.9653C15.5338 15.1273 17.29 13.8394 18.3559 13.8477L18.3945 8.84781C13.5811 8.81069 10.5456 13.4298 10.514 17.9301L15.5139 17.9653ZM18.298 13.8465C18.6193 13.8565 18.9351 13.9336 19.225 14.073L21.3917 9.56686C20.4728 9.12501 19.4716 8.88042 18.4524 8.84893L18.298 13.8465ZM19.225 14.073C19.5149 14.2124 19.7724 14.411 19.9809 14.6558L23.7879 11.4144C23.1269 10.6381 22.3107 10.0087 21.3917 9.56686L19.225 14.073ZM18.072 0.500519C14.6214 0.47391 11.2408 1.47076 8.35777 3.36536L11.1037 7.54387C13.1599 6.19265 15.5714 5.48138 18.0334 5.50037L18.072 0.500519ZM8.35777 3.36536C5.47471 5.25997 3.21888 7.96715 1.87568 11.1445L6.48107 13.0914C7.4389 10.8256 9.04754 8.89507 11.1037 7.54387L8.35777 3.36536ZM1.87568 11.1445C0.532473 14.3219 0.162333 17.8266 0.811773 21.2152L5.7224 20.274C5.25912 17.8567 5.52324 15.3572 6.48107 13.0914L1.87568 11.1445ZM0.811773 21.2152C1.46121 24.6037 3.10102 27.7241 5.52358 30.1818L9.08447 26.6718C7.3556 24.9178 6.18569 22.6913 5.7224 20.274L0.811773 21.2152ZM5.52358 30.1818C7.94613 32.6394 11.0428 34.3243 14.4221 35.0233L15.4349 30.1269C13.0234 29.6281 10.8134 28.4257 9.08447 26.6718L5.52358 30.1818ZM14.4221 35.0233C17.8014 35.7223 21.3118 35.404 24.5094 34.1085L22.6318 29.4744C20.351 30.3985 17.8464 30.6258 15.4349 30.1269L14.4221 35.0233ZM24.5094 34.1085C27.707 32.8128 30.4481 30.5981 32.3857 27.7441L28.2491 24.9356C26.8673 26.9707 24.9126 28.5503 22.6318 29.4744L24.5094 34.1085ZM32.3857 27.7441C34.3234 24.8901 35.3705 21.5253 35.3948 18.0754L30.3949 18.0403C30.3776 20.5009 29.6308 22.9004 28.2491 24.9356L32.3857 27.7441ZM35.3948 18.0754C35.4273 13.4493 33.6202 8.99904 30.3716 5.7034L26.8107 9.2134C29.1291 11.5654 30.4181 14.7406 30.3949 18.0403L35.3948 18.0754ZM30.3716 5.7034C27.1231 2.4078 22.6989 0.5362 18.072 0.500519L18.0334 5.50037C21.3349 5.52583 24.4924 6.86138 26.8107 9.2134L30.3716 5.7034Z"
                                  fill="#CC9322"
                                />
                              </svg>
                            </span>
                            <span
                              className={`tournament-profilecard-teamstatus ${
                                tournament.team_status === "Lost"
                                  ? "red"
                                  : tournament.team_status === "Won"
                                  ? "green"
                                  : ""
                              }`}
                            >
                              {" "}
                              {tournament.team_status}
                            </span>
                          </div>
                        </a>
                      ))
                    )
                  ) : isactiveTournament === "pastTournament" ? (
                    pastTournaments.length === 0 ? (
                      <div className="notournaments">No Tournaments</div>
                    ) : (
                      pastTournaments.map((tournament) => (
                        <a
                          href={`/Tournaments/${tournament.id}`}
                          key={tournament.id}
                        >
                          <div
                            key={tournament.id}
                            className="tournament-profilecard"
                          >
                            <span className="tournament-profilecard-name">
                              {" "}
                              {tournament.name}
                            </span>{" "}
                            <span className="tournament-profilecard-startdate">
                              {" "}
                              Start Date: &nbsp;{tournament.start_date}
                            </span>
                            <span className="tournament-profilecard-enddate">
                              {" "}
                              End Date: &nbsp; {tournament.end_date}
                            </span>
                            <span className="tournament-profilecard-points">
                              Points: &nbsp;
                              {tournament.tournament_points}
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="18"
                                height="18"
                                viewBox="0 0 36 36"
                                fill="none"
                              >
                                <path
                                  d="M17.9473 32.9995C26.2025 33.0632 32.9416 26.425 32.9996 18.1727C33.0576 9.92036 26.4126 3.17893 18.1575 3.11527C9.90232 3.05162 3.16318 9.68983 3.10515 17.9421C3.04713 26.1945 9.69219 32.9359 17.9473 32.9995Z"
                                  fill="#EFB832"
                                />
                                <path
                                  d="M21.6137 23.1942C21.1819 23.6431 20.6648 24.0013 20.0927 24.2477C19.5206 24.4942 18.9049 24.6241 18.2818 24.6296C15.3422 24.607 12.9881 21.6168 13.0139 17.9477C13.0397 14.2786 15.4356 11.3251 18.3752 11.3477C19.0454 11.3684 19.704 11.5293 20.3084 11.8199C20.9128 12.1106 21.4497 12.5245 21.8844 13.0351"
                                  fill="#EFB832"
                                />
                                <path
                                  d="M9.73073 5.45461C12.2003 3.8317 15.0964 2.97765 18.0527 3.00044C22.0169 3.03102 25.8077 4.63459 28.5912 7.4584C31.3746 10.2822 32.9227 14.0949 32.8948 18.0578C32.8741 21.0131 31.9771 23.8953 30.3174 26.3398C28.6577 28.7844 26.3098 30.6815 23.5706 31.7914C20.8314 32.9013 17.8239 33.174 14.9285 32.5751C12.0331 31.9762 9.37974 30.5326 7.30403 28.4268C5.22831 26.3209 3.82345 23.6475 3.26709 20.7446C2.71072 17.8417 3.02786 14.8396 4.17837 12.118C5.32889 9.39639 7.26113 7.07752 9.73073 5.45461Z"
                                  fill="#EFB832"
                                />
                                <path
                                  d="M32.9996 18.1727L35.4996 18.1903L32.9996 18.1727ZM3.10515 17.9421L5.60509 17.9597L3.10515 17.9421ZM23.4154 24.9274C24.3726 23.9323 24.3419 22.3497 23.3468 21.3925C22.3517 20.4353 20.7691 20.466 19.8119 21.4611L23.4154 24.9274ZM18.2818 24.6296L18.2625 27.1296C18.2764 27.1297 18.2903 27.1297 18.3042 27.1295L18.2818 24.6296ZM18.3752 11.3477L18.4524 8.84893C18.4331 8.84833 18.4138 8.84796 18.3945 8.84781L18.3752 11.3477ZM19.9809 14.6558C20.876 15.7071 22.4539 15.8337 23.5051 14.9386C24.5564 14.0435 24.683 12.4657 23.7879 11.4144L19.9809 14.6558ZM18.0527 3.00044L18.0334 5.50037L18.0527 3.00044ZM9.73073 5.45461L8.35777 3.36536V3.36536L9.73073 5.45461ZM4.17837 12.118L1.87568 11.1445L4.17837 12.118ZM3.26709 20.7446L5.7224 20.274L3.26709 20.7446ZM14.9285 32.5751L14.4221 35.0233H14.4221L14.9285 32.5751ZM30.3174 26.3398L28.2491 24.9356L28.2491 24.9356L30.3174 26.3398ZM32.8948 18.0578L35.3948 18.0754L32.8948 18.0578ZM28.5912 7.4584L30.3716 5.7034V5.7034L28.5912 7.4584ZM30.4997 18.1551C30.4514 25.0253 24.8412 30.5526 17.9666 30.4996L17.928 35.4995C27.5637 35.5738 35.4318 27.8247 35.4996 18.1903L30.4997 18.1551ZM17.9666 30.4996C11.0907 30.4466 5.55677 24.8312 5.60509 17.9597L0.605215 17.9246C0.537479 27.5577 8.29372 35.4252 17.928 35.4995L17.9666 30.4996ZM5.60509 17.9597C5.6534 11.0896 11.2636 5.56219 18.1382 5.6152L18.1767 0.615349C8.54108 0.541044 0.67296 8.29009 0.605215 17.9246L5.60509 17.9597ZM18.1382 5.6152C25.0141 5.66822 30.548 11.2836 30.4997 18.1551L35.4996 18.1903C35.5673 8.55711 27.8111 0.689644 18.1767 0.615349L18.1382 5.6152ZM19.8119 21.4611C19.6109 21.6701 19.3701 21.8369 19.1036 21.9517L21.0818 26.5437C21.9595 26.1656 22.7529 25.6161 23.4154 24.9274L19.8119 21.4611ZM19.1036 21.9517C18.837 22.0666 18.55 22.1271 18.2594 22.1297L18.3042 27.1295C19.2598 27.121 20.2041 26.9219 21.0818 26.5437L19.1036 21.9517ZM18.3011 22.1297C17.2329 22.1215 15.4939 20.8035 15.5139 17.9653L10.514 17.9301C10.4824 22.4302 13.4515 27.0925 18.2625 27.1296L18.3011 22.1297ZM15.5139 17.9653C15.5338 15.1273 17.29 13.8394 18.3559 13.8477L18.3945 8.84781C13.5811 8.81069 10.5456 13.4298 10.514 17.9301L15.5139 17.9653ZM18.298 13.8465C18.6193 13.8565 18.9351 13.9336 19.225 14.073L21.3917 9.56686C20.4728 9.12501 19.4716 8.88042 18.4524 8.84893L18.298 13.8465ZM19.225 14.073C19.5149 14.2124 19.7724 14.411 19.9809 14.6558L23.7879 11.4144C23.1269 10.6381 22.3107 10.0087 21.3917 9.56686L19.225 14.073ZM18.072 0.500519C14.6214 0.47391 11.2408 1.47076 8.35777 3.36536L11.1037 7.54387C13.1599 6.19265 15.5714 5.48138 18.0334 5.50037L18.072 0.500519ZM8.35777 3.36536C5.47471 5.25997 3.21888 7.96715 1.87568 11.1445L6.48107 13.0914C7.4389 10.8256 9.04754 8.89507 11.1037 7.54387L8.35777 3.36536ZM1.87568 11.1445C0.532473 14.3219 0.162333 17.8266 0.811773 21.2152L5.7224 20.274C5.25912 17.8567 5.52324 15.3572 6.48107 13.0914L1.87568 11.1445ZM0.811773 21.2152C1.46121 24.6037 3.10102 27.7241 5.52358 30.1818L9.08447 26.6718C7.3556 24.9178 6.18569 22.6913 5.7224 20.274L0.811773 21.2152ZM5.52358 30.1818C7.94613 32.6394 11.0428 34.3243 14.4221 35.0233L15.4349 30.1269C13.0234 29.6281 10.8134 28.4257 9.08447 26.6718L5.52358 30.1818ZM14.4221 35.0233C17.8014 35.7223 21.3118 35.404 24.5094 34.1085L22.6318 29.4744C20.351 30.3985 17.8464 30.6258 15.4349 30.1269L14.4221 35.0233ZM24.5094 34.1085C27.707 32.8128 30.4481 30.5981 32.3857 27.7441L28.2491 24.9356C26.8673 26.9707 24.9126 28.5503 22.6318 29.4744L24.5094 34.1085ZM32.3857 27.7441C34.3234 24.8901 35.3705 21.5253 35.3948 18.0754L30.3949 18.0403C30.3776 20.5009 29.6308 22.9004 28.2491 24.9356L32.3857 27.7441ZM35.3948 18.0754C35.4273 13.4493 33.6202 8.99904 30.3716 5.7034L26.8107 9.2134C29.1291 11.5654 30.4181 14.7406 30.3949 18.0403L35.3948 18.0754ZM30.3716 5.7034C27.1231 2.4078 22.6989 0.5362 18.072 0.500519L18.0334 5.50037C21.3349 5.52583 24.4924 6.86138 26.8107 9.2134L30.3716 5.7034Z"
                                  fill="#CC9322"
                                />
                              </svg>
                            </span>
                            <span
                              className={`tournament-profilecard-teamstatus ${
                                tournament.team_status === "Lost"
                                  ? "red"
                                  : tournament.team_status === "Won"
                                  ? "green"
                                  : ""
                              }`}
                            >
                              {" "}
                              {tournament.team_status}
                            </span>
                          </div>
                        </a>
                      ))
                    )
                  ) : null}
                </div>
              </div>{" "}
            </div>
          </div>
        )}
        {activeButton === "Activity" && (
          <div className="profile-activity">
            {isLoading ? (
              <Loading />
            ) : userPosts.length > 0 ? (
              userPosts.map((post) => (
                <PostCard
                  key={post.id}
                  post={post}
                  gameforum={post.game_forum}
                  userProfile={userProfile}
                />
              ))
            ) : (
              <h3>No posts found.</h3>
            )}
          </div>
        )}
      </div>
    </div>
  );
};
export default ProfilePage;
